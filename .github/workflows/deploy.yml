name: Deploy To EC2

on:
  push:
    branches:
      - main
      - develop
      - test

jobs:
  My-Deploy-Job:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || github.ref == 'refs/heads/develop' && 'dev' || 'test' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: '17'

      - name: Set PROFILE based on branch
        run: |
          if [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            echo "PROFILE=prod" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF_NAME}" == "develop" ]]; then
            echo "PROFILE=dev" >> $GITHUB_ENV
          else
            echo "PROFILE=test" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Make application-${{ env.PROFILE }}.properties
        run: |
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          SECRET_NAME="APPLICATION_PROPERTIES_${{ env.PROFILE }}"
          SECRET_NAME="${SECRET_NAME^^}"
          echo "${{ secrets[SECRET_NAME] }}" > application-${{ env.PROFILE }}.properties
        shell: bash

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      - name: Build WAR
        run: ./gradlew clean build -x test

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          IMAGE_TAG=${{ secrets.DOCKERHUB_USERNAME }}/metalwallet-backend:${{ github.ref_name }}
          docker build -t $IMAGE_TAG .

      - name: Push Docker image
        run: |
          IMAGE_TAG=${{ secrets.DOCKERHUB_USERNAME }}/metalwallet-backend:${{ github.ref_name }}
          docker push $IMAGE_TAG

      - name: Copy docker-compose.yml to EC2
        uses: appleboy/scp-action@v0.1.2
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "docker-compose.yml"
          target: "/home/ubuntu/metal-wallet-backend-v2/"

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            SPRING_PROFILE=${{ github.ref_name }}
            
            # 기존 컨테이너 중지 및 삭제
            docker stop myapp-$SPRING_PROFILE || true
            docker rm myapp-$SPRING_PROFILE || true
            
            # Docker Hub에서 최신 이미지 pull
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/metalwallet-backend:$SPRING_PROFILE
      
      
            # 컨테이너 실행 (docker-compose)
            docker compose --env-file .env.$SPRING_PROFILE up -d